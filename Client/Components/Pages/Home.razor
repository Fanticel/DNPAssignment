@page "/main"
@using Client.Services
@using DTOs
@inject IPostService PostService;
@rendermode InteractiveServer
@inject NavigationManager navMgr

<body class="dark-mode">
<PageTitle>Home</PageTitle>
<AuthorizeView>
    <Authorized>
        <h1>Home</h1>
        @if (postList == null) {
            <div class="alert alert-danger">
                <h1>Loading...</h1>
            </div>
        }
        else if (postList.Count == 0) {
            <div class="alert alert-danger">
                <h3>No content has been found</h3>
                <p>Please refresh the page</p>
            </div>
        }
        else {
            foreach (PostGeneralDto post in postList) {
                <NavLink href="@getToPost(post.PostId)">
                    <div class="content-box">
                        <h3>@post.PostTitle</h3>
                        @for (int i = 0; i < 70 && i < post.PostBody.Length; i++) {
                            <span style="opacity:@getOpacity(i);">@post.PostBody[i]</span>
                        }
                        <span style="opacity:@getOpacity(72);">...</span>
                    </div>
                </NavLink>
            }
        }
    </Authorized>
    <NotAuthorized>
        Hihi you are not logged in :)
        <button class="btn btn-outline-info" @onclick='() => navMgr.NavigateTo("/")'>go to login</button>
    </NotAuthorized>
</AuthorizeView>
</body>

@code {
    List<PostGeneralDto> postList = new();
    protected override async Task OnInitializedAsync() {
        postList = await PostService.GetAllPosts();
    }
    private double getOpacity(int i) {
        return (100.00 - (i / 2)) / 100.00;
    }
    private String getToPost(int Id) {
        return "/posts/" + Id.ToString();
    }
}